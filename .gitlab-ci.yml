default:
    tags:
      - k8s-aws-tools
    interruptible: true

stages:
  - build
  - deploy

variables:
  MKDOCS_IMAGE_VERSION: "0.3.8"
  MKDOCS_IMAGE_URL: "registry.gitlab.com/kxdev/documentation/framework/mkdocs-build"
  KUBERNETES_MEMORY_REQUEST: "512Mi"
  KUBERNETES_MEMORY_LIMIT: "1024Mi"
  
build-job:
  image: "$MKDOCS_IMAGE_URL:$MKDOCS_IMAGE_VERSION"
  stage: build
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
      when: never
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never
    - when: always
  allow_failure: false
  before_script:
    - apt-get install -y zip wget
  script:
    - echo "build-job"
    - ./local.sh build
  artifacts:
    name: "local"
    paths:
      - local.zip
    expire_in: 2 days

.setup-ssh:
  image:
    name: "$MKDOCS_IMAGE_URL:$MKDOCS_IMAGE_VERSION"
    entrypoint: [""]
  before_script:
    - |
      # Write key into container
      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      echo $CODEKXCOM_CI_KEY | base64 -d > ~/.ssh/id_rsa
      chmod 400 ~/.ssh/id_rsa
      eval $(ssh-agent)
      ssh-add ~/.ssh/id_rsa
      ssh-keyscan -t rsa -H code.kx.com >> ~/.ssh/known_hosts
      chmod 644 ~/.ssh/known_hosts

deploy-job:
  stage: deploy
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"
      when: never
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      when: never
    - when: on_success
  dependencies:
    - build-job
  when: on_success
  extends: .setup-ssh
  variables:
    DISPLAY: "1"
    CI_DEBUG_TRACE: "false"
    GIT_STRATEGY: none
    UNZIP_DIR: "/tmp/unzip"
    BACKUP_ROOT: "/tmp/backup"
    DRAFT_DIR: "/tmp/draft"
  script:
    - echo "deploy-job"
    - env
    - echo "$UNZIP_DIR"
    - ls -al
    - |
      ssh ci@code.kx.com << EOF
        mkdir -p ${UNZIP_DIR}
        cd ${UNZIP_DIR}
        pwd
      EOF
